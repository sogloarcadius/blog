#### Linux base OS needs to installed with a valid fqdn declard on a dns server and under /etc/hosts
#### Stackstorm standalone installation on CentOS7/RHEL7 minimal installation
### As "root" user after minimal centos7 installation, proceed with the following commands :
yum upgrade
yum install wget bash-completion bind-tools net-tools
reboot

# SELINUX management tools, not available for some minimal installations
yum install -y policycoreutils-python

# Allow network access for nginx
setsebool -P httpd_can_network_connect 1

# Allow RabbitMQ to use port '25672', otherwise it will fail to start
semanage port --list | grep 25672 || semanage port -a -t amqp_port_t -p tcp 25672


# create monogo-db yum repo file, we'll use our local repo

sh -c "cat <<EOT > /etc/yum.repos.d/mongodb-org-3.4.repo
[mongodb-org-3.4]
name=MongoDB Repository
baseurl=http://repo-el7.xpert-lab.local/el7/mongodb-org-3.4/
gpgcheck=0
enabled=1
EOT"

# create epel yum repo file, we'll use our local repo

sh -c "cat <<EOT > /etc/yum.repos.d/epel.repo
[epel]
name=epel Repository
baseurl=http://repo-el7.xpert-lab.local/el7/epel/
gpgcheck=0
enabled=1
EOT"

# installation crudini
yum -y install crudini

# installation of needed databases and enabling the db service
yum -y install mongodb-org
yum -y install rabbitmq-server
systemctl start mongod rabbitmq-server
systemctl enable mongod rabbitmq-server

# Install and configure postgres
yum -y install postgresql-server postgresql-contrib postgresql-devel

# Initialize PostgreSQL
postgresql-setup initdb

# Make localhost connections to use an MD5-encrypted password for authentication
sed -i "s/\(host.*all.*all.*127.0.0.1\/32.*\)ident/\1md5/" /var/lib/pgsql/data/pg_hba.conf
sed -i "s/\(host.*all.*all.*::1\/128.*\)ident/\1md5/" /var/lib/pgsql/data/pg_hba.conf

# Start PostgreSQL service
systemctl start postgresql
systemctl enable postgresql

# create stackstorm yum repo file, we'll use our local repo

sh -c "cat <<EOT > /etc/yum.repos.d/StackStorm_stable.repo
[StackStorm_stable]
name=StackStorm Repository
baseurl=http://repo-el7.xpert-lab.local/el7/StackStorm_stable/
gpgcheck=0
enabled=1
EOT"

# Install StackStorm Components
yum clean all
yum update
yum install -y st2 st2mistral 


# Setup Datastore Encryption
DATASTORE_ENCRYPTION_KEYS_DIRECTORY="/etc/st2/keys"
DATASTORE_ENCRYPTION_KEY_PATH="${DATASTORE_ENCRYPTION_KEYS_DIRECTORY}/datastore_key.json"
mkdir -p ${DATASTORE_ENCRYPTION_KEYS_DIRECTORY}
st2-generate-symmetric-crypto-key --key-path ${DATASTORE_ENCRYPTION_KEY_PATH}

# Make sure only st2 user can read the file
chgrp st2 ${DATASTORE_ENCRYPTION_KEYS_DIRECTORY}
chmod o-r ${DATASTORE_ENCRYPTION_KEYS_DIRECTORY}
chgrp st2 ${DATASTORE_ENCRYPTION_KEY_PATH}
chmod o-r ${DATASTORE_ENCRYPTION_KEY_PATH}

# set path to the key file in the config
crudini --set /etc/st2/st2.conf keyvalue encryption_key_path ${DATASTORE_ENCRYPTION_KEY_PATH}

st2ctl restart-component st2api

# Create Mistral DB in PostgreSQL
cat << EHD | sudo -u postgres psql
CREATE ROLE mistral WITH CREATEDB LOGIN ENCRYPTED PASSWORD 'StackStorm';
CREATE DATABASE mistral OWNER mistral;
EHD

# Setup Mistral DB tables, etc.
/opt/stackstorm/mistral/bin/mistral-db-manage --config-file /etc/mistral/mistral.conf upgrade head
# Register mistral actions
/opt/stackstorm/mistral/bin/mistral-db-manage --config-file /etc/mistral/mistral.conf populate | grep -v -e openstack -e keystone -e ironicclient


# Create an SSH system user (default `stanley` user may already exist)
useradd stanley
mkdir -p /home/stanley/.ssh
chmod 0700 /home/stanley/.ssh

# Generate ssh keys
ssh-keygen -b 4096 -f /home/stanley/.ssh/stanley_rsa -P ""

# Authorize key-based access
sh -c 'cat /home/stanley/.ssh/stanley_rsa.pub >> /home/stanley/.ssh/authorized_keys'
chown -R stanley:stanley /home/stanley/.ssh

# Enable passwordless sudo
sh -c 'echo "stanley    ALL=(ALL)       NOPASSWD: SETENV: ALL" >> /etc/sudoers.d/st2'
chmod 0440 /etc/sudoers.d/st2

# Make sure `Defaults requiretty` is disabled in `/etc/sudoers`
sed -i -r "s/^Defaults\s+\+?requiretty/# Defaults +requiretty/g" /etc/sudoers


# Start services
st2ctl start
st2ctl reload

### below verification steps must be done before proceeding with authentication
st2 --version

st2 -h

# List the actions from a 'core' pack
st2 action list --pack=core

# Run a local shell command
st2 run core.local -- date -R

# See the execution results
st2 execution list

# Fire a remote comand via SSH (Requires passwordless SSH)
st2 run core.remote hosts='localhost' -- uname -a

# Install a pack
st2 pack install st2

### Setup authentication
sudo yum -y install httpd-tools
echo 'P@ssw0rd' | sudo htpasswd -i /etc/st2/htpasswd st2admin
# enable auth on /etc/st2/st2.conf :
sed -i "s/\(\enable = False\)/enable = True/" /etc/st2/st2.conf
# restart st2api :
st2ctl restart-component st2api
# test authentication 
# Get an auth token to use in CLI or API
st2 auth st2admin
# A shortcut to authenticate and export the token
export ST2_AUTH_TOKEN=$(st2 auth st2admin -p 'P@ssw0rd' -t)
# Check that it works
st2 action list

### setup  WEBUI

# create nginx yum repo file, we'll use our local repo
sh -c "cat <<EOT > /etc/yum.repos.d/nginx.repo
[nginx]
name=Nginx Repository
baseurl=http://repo-el7.xpert-lab.local/el7/nginx/
gpgcheck=0
enabled=1
EOT"

# Install nginx, avoid epel repo in favor of nginx.org
yum --disablerepo='epel' install -y nginx

# Install st2web
yum install -y st2web

# Generate a self-signed certificate or place your existing certificate under /etc/ssl/st2
mkdir -p /etc/ssl/st2
openssl req -x509 -newkey rsa:2048 -keyout /etc/ssl/st2/st2.key -out /etc/ssl/st2/st2.crt \
-days 730 -nodes -subj "/C=US/ST=California/L=Palo Alto/O=StackStorm/OU=Information \
Technology/CN=$(hostname)"
# Copy and enable the supplied nginx config file
cp /usr/share/doc/st2/conf/nginx/st2.conf /etc/nginx/conf.d/
# Disable default_server configuration in existing /etc/nginx/nginx.conf
sed -i 's/default_server//g' /etc/nginx/nginx.conf
systemctl restart nginx
systemctl enable nginx

firewall-cmd --zone=public --permanent --add-service=http --add-service=https
firewall-cmd --reload 

# install needed tools for pack installation : gcc pip & update pip
yum -y install gcc
yum -y install python2-pip-8.1.2-6.el7.noarch
pip install --upgrade pip
