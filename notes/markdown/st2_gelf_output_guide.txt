###Enabling GELF output ST2 ###
## installing ntpd ##
yum -y install ntp
# deactivate default ntp servers
sed -i "s/^\(server \)/#server /" /etc/ntp.conf
# add Xpert-lab time server
sed -i "/server 0./i server time.xpert-lab.local" /etc/ntp.conf
# enable and start ntp service
systemctl enable ntpd
systemctl start ntpd
# check ntpd service state, should be active
systemctl status ntpd
# check time sync
ntpq -p
# output should be something like :
     remote           refid      st t when poll reach   delay   offset  jitter
==============================================================================
 time.xpert-lab. 192.168.250.9    5 u   22   64    1    0.725  50793.1   0.000
 
## configure ST2 GELF  output ##
# add the following lines in /etc/st2/logging.actionrunner.conf
[handler_gelfHandler]
class=st2common.log.FormatNamedFileHandler
level=INFO
formatter=gelfFormatter
args=("/var/log/st2/st2actionrunner.{pid}.gelf.log",)

# add the following lines in all filenames equal /etc/st2/logging.<component>.conf, with <component> : api, auth, garbagecollector, notifier, resultstracker, rulesengine, scheduler, sensorcontainer, stream, timersengine, workflowengine
[handler_gelfHandler]
class=handlers.RotatingFileHandler
level=DEBUG
formatter=gelfFormatter
args=("/var/log/st2/st2<component>.gelf.log",)

# add 'gelfHandler' in previously edited logging configuration files 
[handlers]
# add ', gelfHandler' the end of the following line
keys=consoleHandler, fileHandler, auditHandler, gelfHandler

# restart stackstorm components
st2ctl restart

# 

[logger_root]
level=INFO
# add ', gelfHandler' the end of the following line
handlers=consoleHandler, fileHandler, auditHandler, gelfHandler

## fluentd td-agent ##
# for td-agent installation we'll use our local treasuredata  repo
sh -c "cat <<EOT > /etc/yum.repos.d/mongodb-org-3.4.repo
[treasuredata]
name=TreasureData
baseurl=http://repo-el7.xpert-lab.local/el7/treasuredata/
gpgcheck=0
enabled=1
EOT"

# install fluentd td-agent
yum -y install td-agent

# enable and start td-agent service
systemctl start td-agent
systemctl enable td-agent

# install fluentd gelf output plugin
td-agent-gem install fluent-plugin-gelf-hs

# configure export target graylog server
export GRAYLOG_SERVER=dashauto.xpert-lab.local
export GRAYLOG_GELF_UDP_PORT=12202

# the following command will add st2 gelf formatted logs as an output source 
cat >> /etc/td-agent/td-agent.conf << EOF
<source>
  type tail
  format json
  path /var/log/st2/st2actionrunner*.gelf.log
  tag st2actionrunner
  pos_file /var/run/td-agent/st2actionrunner.gelf.log.pos
  enable_watch_timer false
  estimate_current_event true
</source>

<source>
  type tail
  format json
  path /var/log/st2/st2api.gelf.log
  tag st2api
  pos_file /var/run/td-agent/st2api.gelf.log.pos
  enable_watch_timer false
  estimate_current_event true
</source>

<source>
  type tail
  format json
  path /var/log/st2/st2auth.gelf.log
  tag st2auth
  pos_file /var/run/td-agent/st2auth.gelf.log.pos
  enable_watch_timer false
  estimate_current_event true
</source>

<source>
  type tail
  format json
  path /var/log/st2/st2garbagecollector.gelf.log
  tag st2garbagecollector
  pos_file /var/run/td-agent/st2garbagecollector.gelf.log.pos
  enable_watch_timer false
  estimate_current_event true
</source>

<source>
  type tail
  format json
  path /var/log/st2/st2notifier.gelf.log
  tag st2notifier
  pos_file /var/run/td-agent/st2notifier.gelf.log.pos
  enable_watch_timer false
  estimate_current_event true
</source>

<source>
  type tail
  format json
  path /var/log/st2/st2resultstracker.gelf.log
  tag st2resultstracker
  pos_file /var/run/td-agent/st2resultstracker.gelf.log.pos
  enable_watch_timer false
  estimate_current_event true
</source>

<source>
  type tail
  format json
  path /var/log/st2/st2rulesengine.gelf.log
  tag st2rulesengine
  pos_file /var/run/td-agent/st2rulesengine.gelf.log.pos
  enable_watch_timer false
  estimate_current_event true
</source>

<source>
  type tail
  format json
  path /var/log/st2/st2sensorcontainer.gelf.log
  tag st2sensorcontainer
  pos_file /var/run/td-agent/st2sensorcontainer.gelf.log.pos
  enable_watch_timer false
  estimate_current_event true
</source>

<source>
  type tail
  format json
  path /var/log/st2/st2stream.gelf.log
  tag st2stream
  pos_file /var/run/td-agent/st2stream.gelf.log.pos
  enable_watch_timer false
  estimate_current_event true
</source>

<match st2**>
  type gelf 
  host $GRAYLOG_SERVER
  port $GRAYLOG_GELF_UDP_PORT
  protocol udp
  flush_interval 5s
  estimate_current_event true
</match>
EOF

# restart td-agent service
systemctl restart td-agent

